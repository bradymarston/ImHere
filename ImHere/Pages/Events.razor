@page "/events"
@attribute [Authorize]

@using ImHere.Services
@using ImHere.Services.Dtos

@inject EventService _eventService

<h1>Events</h1>

<NavLink href="/eventForm" class="btn btn-success">
    <span class="oi oi-plus" aria-hidden="true"></span> Add Event
</NavLink>
<p></p>
<table class="table table-hover">
    <thead>
        <tr>
            <th scope="col">Name</th>
            <th scope="col">Start Time</th>
            <th scope="col">Day</th>
            <th scope="col">
                <div>Duration</div>
                <div>(Hours)</div>
            </th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var e in events)
        {
            <tr>
                <th scope="row">@e.Name</th>
                <td>@e.Schedule.StartTime.ToShortTimeString()</td>
                <td>@GetDayString(e)</td>
                <td>@e.Schedule.Duration</td>
                <td>
                    <div style="width: 16rem;">
                        <NavLink href="@("/eventForm/" + e.Id)" class="btn btn-primary">
                            <span class="oi oi-pencil" aria-hidden="true"></span> Edit
                        </NavLink>
                        <button class="btn btn-danger" @onclick="@(() => RemoveClicked(e.Id))" disabled="@(e.Id == confirmingRemovalId)">
                            <span class="oi oi-x"></span> Remove
                        </button>
                    </div>
                    @if (e.Id == confirmingRemovalId)
                    {
                        <p></p>
                        <div class="card" style="width: 16rem;">
                            <div class="card-body">
                                <p class="card-text">
                                    Are you sure you want to remove "@(e.Name)"?
                                </p>
                                <button class="btn btn-success" @onclick="@(() => RemoveEventAsync(e))">
                                    <span class="oi oi-check"></span> Confirm
                                </button>
                                <button class="btn btn-secondary" @onclick="CancelRemoval">
                                    <span class="oi oi-x"></span> Cancel
                                </button>
                            </div>
                        </div>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private IList<EventDto> events = new List<EventDto>();
    private int confirmingRemovalId;

    protected override async Task OnInitializedAsync()
    {
        events = (await _eventService.GetEventsAsync()).ToList();

        await base.OnInitializedAsync();
    }

    private string GetDayString(EventDto @event)
    {
        return @event.Schedule switch
        {
            OneTimeScheduleInfoDto scheduleInfo => scheduleInfo.Date.ToShortDateString(),
            WeeklyScheduleInfoDto scheduleInfo => scheduleInfo.Day.ToString()
        };
    }

    private void RemoveClicked(int eventId)
    {
        confirmingRemovalId = eventId;
    }

    private async Task RemoveEventAsync(EventDto @event)
    {
        events.Remove(@event);
        try
        {
            await _eventService.RemoveEvent(@event);
        }
        catch
        {
            events.Add(@event);
        }
    }

    private void CancelRemoval(MouseEventArgs e)
    {
        confirmingRemovalId = 0;
    }
}
