@page "/changepassword"
@attribute [Authorize]


@using ImHere.Services.Dtos
@using ImHere.Services
@inject AccountService _accountService
@inject NavigationManager _navigationManager

<h1>Change Password</h1>

<EditForm Model="@changePasswordModel" OnValidSubmit="@(async () => await ChangePasswordAsync())">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="oldPassword">Current Password</label>
        <InputText @bind-Value="@changePasswordModel.CurrentPassword"
                   type="password"
                   class="form-control"
                   id="currentPassword"
                   placeholder="Current Password" />
        <ValidationMessage For="@(() => changePasswordModel.CurrentPassword)" />
    </div>
    <div class="form-group">
        <label for="newPassword">New Password</label>
        <InputText @bind-Value="@changePasswordModel.NewPassword"
                   type="password"
                   class="form-control"
                   id="newPassword"
                   placeholder="New Password" />
        <ValidationMessage For="@(() => changePasswordModel.NewPassword)" />
    </div>
    <button type="submit" class="btn btn-primary">Change Password</button>
    <NavLink class="btn btn-secondary" href="">Cancel</NavLink>
</EditForm>

@code {
    private ChangePasswordDto changePasswordModel = new ChangePasswordDto();

    private async Task ChangePasswordAsync()
    {
        var result = await _accountService.ChangePasswordAsync(changePasswordModel);

        if (result.Succeeded)
            _navigationManager.NavigateTo("passwordsuccess");
    }
}
